name: AWX Control Machine Setup and Test

on:
  push:
    branches:
      - main
  workflow_dispatch:  # Allows manual trigger

jobs:
  setup-awx:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Check out the repository
    - name: Checkout Repository
      uses: actions/checkout@v3

    # Step 2: Install Dependencies (Docker, Kubernetes CLI, Kind)
    - name: Install Dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y apt-transport-https ca-certificates curl software-properties-common
        sudo apt-get remove -y docker docker-engine docker.io containerd runc || true
        curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
        echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
        sudo apt-get update
        sudo apt-get install -y docker-ce docker-ce-cli containerd.io
        sudo curl -L "https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
        sudo chmod +x /usr/local/bin/docker-compose
        curl -LO "https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl"
        chmod +x ./kubectl
        sudo mv ./kubectl /usr/local/bin/kubectl
        curl -Lo ./kind https://kind.sigs.k8s.io/dl/v0.20.0/kind-linux-amd64
        chmod +x ./kind
        sudo mv ./kind /usr/local/bin/kind

    # Step 3: Create a Kind Cluster
    - name: Create Kind Cluster
      run: |
        kind create cluster --name awx-cluster

    # Step 4: Install AWX Operator
    - name: Install AWX Operator
      run: |
        kubectl apply -k "github.com/ansible/awx-operator/config/default?ref=main"

    # Step 5: Deploy AWX
    - name: Deploy AWX
      run: |
        cat <<EOF | kubectl apply -f -
        apiVersion: awx.ansible.com/v1beta1
        kind: AWX
        metadata:
          name: awx
        spec:
          service_type: NodePort
          ingress_type: none
          admin_user: admin
          admin_password: admin
        EOF

    # Step 6: Wait for AWX to Be Ready
    - name: Wait for AWX to Be Ready
      run: |
        echo "Waiting for AWX to be ready..."
        kubectl wait --for=condition=Ready pod -l app.kubernetes.io/instance=awx --timeout=300s -n default

    # Step 7: Output AWX URL and Credentials
    - name: Output AWX Details
      run: |
        echo "AWX is deployed and ready for testing!"
        echo "Access the AWX UI using the following details:"
        echo "URL: http://127.0.0.1:<NodePort>"
        echo "Admin Username: admin"
        echo "Admin Password: admin"
