name: AWX Control Machine Setup and Test

on:
  push:
    branches:
      - main
  workflow_dispatch:  # Allows manual trigger

jobs:
  setup-awx:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Check out the repository
    - name: Checkout Repository
      uses: actions/checkout@v3

    # Step 2: Update and Install Required Dependencies
    - name: Prepare Environment
      run: |
        sudo apt-get update
        sudo apt-get install -y apt-transport-https ca-certificates curl software-properties-common

    # Step 3: Add Docker Repository and Install Docker
    - name: Install Docker
      run: |
        # Remove conflicting packages
        sudo apt-get remove -y docker docker-engine docker.io containerd runc
        # Add Docker's official GPG key and repository
        curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
        echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
        # Update package database with Docker packages
        sudo apt-get update
        # Install Docker and containerd
        sudo apt-get install -y docker-ce docker-ce-cli containerd.io
        sudo systemctl start docker
        sudo systemctl enable docker

    # Step 4: Install Docker Compose
    - name: Install Docker Compose
      run: |
        sudo curl -L "https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
        sudo chmod +x /usr/local/bin/docker-compose
        docker-compose --version

    # Step 5: Clone the AWX repository
    - name: Clone AWX Repository
      run: |
        git clone https://github.com/ansible/awx.git
        cd awx
        git checkout 21.14.0  # Specify a stable AWX version for testing

    # Step 6: Configure the AWX inventory
    - name: Configure AWX Inventory
      run: |
        cd awx/installer
        echo "localhost ansible_connection=local" > inventory
        echo "[all]" >> inventory
        echo "127.0.0.1 ansible_connection=local" >> inventory
        echo "admin_password=admin" >> inventory  # Default password for testing purposes

    # Step 7: Install AWX
    - name: Install AWX
      run: |
        cd awx/installer
        ansible-playbook -i inventory install.yml
      env:
        ANSIBLE_DEPRECATION_WARNINGS: "False"  # Silence warnings during playbook run

    # Step 8: Output AWX Access URL and Admin Credentials
    - name: Log AWX Details
      run: |
        echo "AWX Control Machine is ready for testing."
        echo "Access AWX at http://127.0.0.1:80"
        echo "Login credentials: admin / admin"

    # Step 9: Test AWX API (Optional)
    - name: Test AWX API
      run: |
        curl -X GET http://127.0.0.1:80/api/v2/config/ \
          -u admin:admin \
          -H "Content-Type: application/json"
